[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-04-03T17:27:18.370Z",
        "before": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "match": {
              "location": "api.stepdefs.Hooks.setup()"
            }
          }
        ],
        "line": 4,
        "name": "Test get request",
        "description": "",
        "id": "test-pokemon-apis;test-get-request",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "api.stepdefs.Hooks.cleanup()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2345000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user sends get request for GOT",
            "match": {
              "location": "api.stepdefs.APITestStepDefs.getCharactersNamesTest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 6,
            "name": "status code must be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 20
                }
              ],
              "location": "api.stepdefs.APITestStepDefs.status_code_must_be(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@get"
          }
        ]
      }
    ],
    "name": "Test Pokemon APIs",
    "description": "",
    "id": "test-pokemon-apis",
    "keyword": "Feature",
    "uri": "file:src/test/java/resources/features/GOTapi.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-04-03T17:27:20.806Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "api.stepdefs.Hooks.setup()"
            }
          }
        ],
        "line": 4,
        "name": "Get pet by id",
        "description": "",
        "id": "test-petstore-apis;get-pet-by-id",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "api.stepdefs.Hooks.cleanup()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nExpected status code \u003c500\u003e but was \u003c200\u003e.\n\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)\r\n\tat io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\r\n\tat io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1267)\r\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)\r\n\tat io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)\r\n\tat api.stepdefs.APITestStepDefs.pet_is_created(APITestStepDefs.java:64)\r\n\tat âœ½.pet is created with following info(file:///C:/Users/diamo/jenkinsTest/src/test/java/resources/features/PetstoreAPI.feature:5)\r\n",
              "duration": 1613000000,
              "status": "failed"
            },
            "line": 5,
            "name": "pet is created with following info",
            "match": {
              "location": "api.stepdefs.APITestStepDefs.pet_is_created(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "id",
                  "status"
                ]
              },
              {
                "cells": [
                  "Hutch",
                  "8787",
                  "good pet"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user executes \"GET\" request",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 14
                }
              ],
              "location": "api.stepdefs.APITestStepDefs.user_executes_request(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 15
                }
              ],
              "location": "api.stepdefs.APITestStepDefs.status_code_is(java.lang.Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "pet has following attributes",
            "match": {
              "location": "api.stepdefs.APITestStepDefs.pet_has_following_attributes(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "petName",
                  "petId",
                  "petStatus"
                ]
              },
              {
                "cells": [
                  "Hutch",
                  "8787",
                  "good pet"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@get"
          }
        ]
      },
      {
        "start_timestamp": "2022-04-03T17:27:22.436Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "api.stepdefs.Hooks.setup()"
            }
          }
        ],
        "line": 15,
        "name": "Create pet",
        "description": "",
        "id": "test-petstore-apis;create-pet",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "api.stepdefs.Hooks.cleanup()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 286000000,
              "status": "passed"
            },
            "line": 16,
            "name": "pet is created",
            "match": {
              "location": "api.stepdefs.APITestStepDefs.createPetTest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "status code must be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 20
                }
              ],
              "location": "api.stepdefs.APITestStepDefs.status_code_must_be(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "line": 18,
            "name": "pet must have following attributes",
            "match": {
              "location": "api.stepdefs.APITestStepDefs.pet_must_have(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "petName",
                  "petId",
                  "petStatus"
                ]
              },
              {
                "cells": [
                  "Hutch",
                  "878700",
                  "gone"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@post"
          }
        ]
      }
    ],
    "name": "Test Petstore APIs",
    "description": "",
    "id": "test-petstore-apis",
    "keyword": "Feature",
    "uri": "file:src/test/java/resources/features/PetstoreAPI.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-04-03T17:27:22.727Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "api.stepdefs.Hooks.setup()"
            }
          }
        ],
        "line": 4,
        "name": "Test get request",
        "description": "",
        "id": "test-pokemon-apis;test-get-request",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "api.stepdefs.Hooks.cleanup()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 92000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user sends get request",
            "match": {
              "location": "api.stepdefs.APITestStepDefs.getAbilityTest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "status code must be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 20
                }
              ],
              "location": "api.stepdefs.APITestStepDefs.status_code_must_be(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@get"
          }
        ]
      }
    ],
    "name": "Test Pokemon APIs",
    "description": "",
    "id": "test-pokemon-apis",
    "keyword": "Feature",
    "uri": "file:src/test/java/resources/features/PokemonAPI.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2022-04-03T17:27:22.825Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "api.stepdefs.Hooks.setup()"
            }
          }
        ],
        "line": 4,
        "name": "Techtorial  First scenario",
        "description": "",
        "id": "techtorial--third-test;techtorial--first-scenario",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "api.stepdefs.Hooks.cleanup()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2008000000,
              "status": "passed"
            },
            "line": 5,
            "name": "first test executed",
            "match": {
              "location": "api.stepdefs.TechtorialTestSteps.first_test_executed()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2003000000,
              "status": "passed"
            },
            "line": 6,
            "name": "do verification",
            "match": {
              "location": "api.stepdefs.TechtorialTestSteps.do_verification()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@get"
          }
        ]
      },
      {
        "start_timestamp": "2022-04-03T17:27:26.842Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "api.stepdefs.Hooks.setup()"
            }
          }
        ],
        "line": 8,
        "name": "Techtorial  Second scenario",
        "description": "",
        "id": "techtorial--third-test;techtorial--second-scenario",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "api.stepdefs.Hooks.cleanup()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2012000000,
              "status": "passed"
            },
            "line": 9,
            "name": "second test executed",
            "match": {
              "location": "api.stepdefs.TechtorialTestSteps.second_test_executed()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2002000000,
              "status": "passed"
            },
            "line": 10,
            "name": "do second verification",
            "match": {
              "location": "api.stepdefs.TechtorialTestSteps.do_second_verification()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@get"
          }
        ]
      },
      {
        "start_timestamp": "2022-04-03T17:27:30.860Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "api.stepdefs.Hooks.setup()"
            }
          }
        ],
        "line": 12,
        "name": "Techtorial  Third scenario",
        "description": "",
        "id": "techtorial--third-test;techtorial--third-scenario",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "api.stepdefs.Hooks.cleanup()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2015000000,
              "status": "passed"
            },
            "line": 13,
            "name": "third test executed",
            "match": {
              "location": "api.stepdefs.TechtorialTestSteps.third_test_executed()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2002000000,
              "status": "passed"
            },
            "line": 14,
            "name": "do third verification",
            "match": {
              "location": "api.stepdefs.TechtorialTestSteps.do_third_verification()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@get"
          }
        ]
      },
      {
        "start_timestamp": "2022-04-03T17:27:34.881Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "api.stepdefs.Hooks.setup()"
            }
          }
        ],
        "line": 16,
        "name": "Techtorial  Fourth scenario",
        "description": "",
        "id": "techtorial--third-test;techtorial--fourth-scenario",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "api.stepdefs.Hooks.cleanup()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2013000000,
              "status": "passed"
            },
            "line": 17,
            "name": "fourth test executed",
            "match": {
              "location": "api.stepdefs.TechtorialTestSteps.fourth_test_executed()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2013000000,
              "status": "passed"
            },
            "line": 18,
            "name": "do fourth verification",
            "match": {
              "location": "api.stepdefs.TechtorialTestSteps.do_fourth_verification()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@get"
          }
        ]
      }
    ],
    "name": "Techtorial  Third test",
    "description": "",
    "id": "techtorial--third-test",
    "keyword": "Feature",
    "uri": "file:src/test/java/resources/features/TechtorialThirdTest.feature",
    "tags": [
      {
        "name": "@get",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  }
]